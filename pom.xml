<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.pick</groupId>
	<artifactId>pick</artifactId>
	<packaging>pom</packaging>
	<version>1.0</version>
	<name>pick</name>
	<repositories>
		<repository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>	
		<hibernate.jpa-api.version>2.1</hibernate.jpa-api.version>
		<spring.core.version>4.1.5.RELEASE</spring.core.version>
		<spring.version>4.1.3.RELEASE</spring.version>
		<spring.security.version>3.2.5.RELEASE</spring.security.version>
		<slf4j.version>1.6.1</slf4j.version>
		<log4j.version>1.2.14</log4j.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<jstl.version>1.2</jstl.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<thymeleaf.version>2.0.14</thymeleaf.version>
		<cglib.version>2.2</cglib.version>
		<aspectj.version>1.6.10</aspectj.version>
		<querydsl.version>2.8.0</querydsl.version>
		<javax.jstl-taglibs.version>1.1.2</javax.jstl-taglibs.version>
		<jackson.version>1.9.3</jackson.version>
		<mysql.connector.version>5.1.25</mysql.connector.version>
		<hibernate.entitymanager.version>3.6.3.Final</hibernate.entitymanager.version>
		<spring.data.jpa.version>1.2.0.RELEASE</spring.data.jpa.version>
		<httpclient.version>4.3.3</httpclient.version>
		
		<!-- Spring Social -->
		<spring.social.version>1.1.0.RELEASE</spring.social.version>
		<spring.social.facebook.version>1.1.1.RELEASE</spring.social.facebook.version>
		<spring.social.twitter.version>1.1.0.RELEASE</spring.social.twitter.version>
		<hibernate.jpa-api.version>2.0-cr-1</hibernate.jpa-api.version>
		
		<!-- Testing -->
		<mockito.version>1.8.5</mockito.version>
		<junit.version>4.8.2</junit.version>
	</properties>

	<dependencies>
	
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-core</artifactId>
			<version>1.1.0.RELEASE</version>
		</dependency>
		<dependency>
 			 <groupId>org.springframework.social</groupId>
 			 <artifactId>spring-social-config</artifactId>
 			<version>1.1.0.RELEASE</version>
		</dependency>
		
	
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1003-jdbc4</version>
		</dependency>
		<!-- <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.25</version>
		</dependency>  -->    
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
 
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
 
		<!-- jstl for jsp page -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		
		<!-- Added later -->
		
<!-- 		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-core</artifactId>
    		<version>${spring.core.version}</version>
    		<type>jar</type>
    		<scope>compile</scope>
    	</dependency> -->
    	<!-- <dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-web</artifactId>
    		<version>${spring.core.version}</version>
    		<type>jar</type>
    		<scope>compile</scope>
    	</dependency> -->
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-tx</artifactId>
    	<version>${spring.core.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <!-- <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-webmvc</artifactId>
    	<version>${spring.core.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency> -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.core.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-oxm</artifactId>
    	<version>${spring.core.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>${spring.core.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
    
	<!-- Spring Security -->
    <dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-core</artifactId>
    	<version>${spring.security.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
   <!--  <dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-web</artifactId>
    	<version>${spring.security.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency> -->
    <!-- <dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-config</artifactId>
    	<version>${spring.security.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency> -->
    <dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>spring-security-taglibs</artifactId>
    	<version>${spring.security.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    
    <!-- Spring Social -->
<dependency>
	<groupId>org.springframework.social</groupId>
	<artifactId>spring-social-web</artifactId>
	<version>1.0.3.RELEASE</version>
</dependency>

	<dependency>
		<groupId>org.springframework.social</groupId>
		<artifactId>spring-social-facebook</artifactId>
		<version>${spring.social.facebook.version}</version>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.social</groupId>
		<artifactId>spring-social-twitter</artifactId>
		<version>${spring.social.twitter.version}</version>
	</dependency>

	<!-- A seamless aspect-oriented extension to the Java programming language -->
	<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>${aspectj.version}</version>
	</dependency>
	
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>${aspectj.version}</version>
	</dependency>
	
	<!-- Cglib is a powerful, high performance and quality Code Generation Library, 
	It is used to extend JAVA classes and implements interfaces at runtime.  -->
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib-nodep</artifactId>
		<version>${cglib.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	
	<!-- The JavaServer Pages Standard Tag Library (JSTL) encapsulates, as simple tags, core 
	functionality common to many JSP applications. -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>jstl</artifactId>
	    <version>${javax.jstl-taglibs.version}</version>
	</dependency>
	<dependency>
		<groupId>taglibs</groupId>
		<artifactId>standard</artifactId>
		<version>${javax.jstl-taglibs.version}</version>
	</dependency>
	
	<!-- Data Mapper package is a high-performance data binding package built 
		on Jackson JSON processor -->
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-mapper-asl</artifactId>
		<version>${jackson.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>

	<!-- Jackson is a high-performance JSON processor (parser, generator) -->
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-core-asl</artifactId>
		<version>${jackson.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>

	<!--  Spring Social dependency -->
	<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>${httpclient.version}</version>
	</dependency>
	<!-- Logger -->
    <dependency>
    	<groupId>log4j</groupId>
    	<artifactId>log4j</artifactId>
    	<version>${log4j.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
	<!-- The Simple Logging Facade for Java or (SLF4J) serves as a simple facade or abstraction 
	for various logging frameworks, e.g. java.util.logging, log4j and logback, allowing the end 
	user to plug in the desired logging framework at deployment time. -->
    <dependency>
    	<groupId>org.slf4j</groupId>
    	<artifactId>slf4j-api</artifactId>
    	<version>${slf4j.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency> 
    <dependency>
    	<groupId>org.slf4j</groupId>
    	<artifactId>slf4j-log4j12</artifactId>
    	<version>${slf4j.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>org.slf4j</groupId>
    	<artifactId>jcl-over-slf4j</artifactId>
    	<version>${slf4j.version}</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <!-- Spring Data JPA -->
    <dependency>
		 <groupId>org.springframework.data</groupId>
		 <artifactId>spring-data-jpa</artifactId>
		 <version>${spring.data.jpa.version}</version>
	</dependency>
	<!-- Thymeleaf -->
	<dependency>
		<groupId>org.thymeleaf</groupId>
		<artifactId>thymeleaf</artifactId>
		<version>${thymeleaf.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>org.thymeleaf</groupId>
		<artifactId>thymeleaf-spring3</artifactId>
		<version>${thymeleaf.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<!-- Database pooling -->
	<dependency>
		<groupId>c3p0</groupId>
		<artifactId>c3p0</artifactId>
		<version>${c3p0.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<!--  MySQL Connector -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>${mysql.connector.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>	
	<!-- Hibernate and JPA -->
		<dependency>
			<groupId>org.hibernate.java-persistence</groupId>
			<artifactId>jpa-api</artifactId>
			<version>${hibernate.jpa-api.version}</version>
			<scope>compile</scope>
		</dependency>
<!-- 	<dependency>
		<groupId>org.hibernate.javax.persistence</groupId>
		<artifactId>hibernate-jpa-2.0-api</artifactId>
		<version>1.0.1.Final</version>
	</dependency>
	 -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>${hibernate.entitymanager.version}</version>
		<scope>compile</scope>
	</dependency>	
	<!-- QueryDSL -->
	<dependency>
		<groupId>com.mysema.querydsl</groupId>
		<artifactId>querydsl-core</artifactId>
		<version>${querydsl.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>com.mysema.querydsl</groupId>
		<artifactId>querydsl-jpa</artifactId>
		<version>${querydsl.version}</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<dependency>
	  <groupId>com.mysema.querydsl</groupId>
	  <artifactId>querydsl-apt</artifactId>
	  <version>${querydsl.version}</version>
	  <scope>provided</scope>
	</dependency>
	<!-- Javax Servlet. This needs to be included for runtime only! -->
<!-- 	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>${javax.servlet-api.version}</version>
		<scope>provided</scope>
	</dependency> -->
    <!-- Testing dependencies -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>${junit.version}</version>
		<type>jar</type>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-all</artifactId>
		<version>${mockito.version}</version>
		<type>jar</type>
		<scope>test</scope>
	</dependency>	
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-test</artifactId>
    	<version>${spring.core.version}</version>
    	<type>jar</type>
    	<scope>test</scope>
    </dependency>
</dependencies>
	<build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <!-- <executions>

         <execution>
            <id>print-antrun1</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>print-antrun2</id>
            <phase>compile</phase>
            <configuration>
              <target>
                <echo message="compile execution config"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

        </executions> -->
        <configuration>
        		<echo message="compile classpath: ${compile_classpath}"/>
                <echo message="runtime classpath: ${runtime_classpath}"/>
                <echo message="test classpath:    ${test_classpath}"/>
                <echo message="plugin classpath:  ${plugin_classpath}"/>
        	<failOnMissingWebXml>false</failOnMissingWebXml>
            <echo message="plugin config"/>
            <outputDirectory>webapps</outputDirectory>
			<warName>ROOT</warName>
        </configuration>
      </plugin>
      <plugin>
			<artifactId>maven-resources-plugin</artifactId>
			<version>2.5</version>
			<executions>
				<execution>
					<id>copy-meta-inf</id>
					<phase>compile</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
						<resources>
							<resource>
								<directory>${project.basedir}/src/main/java/META-INF</directory>
							</resource>
						</resources>
					</configuration>
				</execution>
			</executions>
		</plugin>
    </plugins>
  </build>
</project>
